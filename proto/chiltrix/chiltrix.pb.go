// Code generated by protoc-gen-go. DO NOT EDIT.
// source: chiltrix.proto

package chiltrix

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// State captures the state of the heat pump at a given instant for archival purposes.
type State struct {
	// Collection time.
	CollectionTime *timestamp.Timestamp `protobuf:"bytes,1,opt,name=collection_time,json=collectionTime,proto3" json:"collection_time,omitempty"`
	// Modbus register values.
	RegisterValues       *RegisterSnapshot `protobuf:"bytes,2,opt,name=register_values,json=registerValues,proto3" json:"register_values,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *State) Reset()         { *m = State{} }
func (m *State) String() string { return proto.CompactTextString(m) }
func (*State) ProtoMessage()    {}
func (*State) Descriptor() ([]byte, []int) {
	return fileDescriptor_13e145c77d2d01e5, []int{0}
}

func (m *State) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_State.Unmarshal(m, b)
}
func (m *State) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_State.Marshal(b, m, deterministic)
}
func (m *State) XXX_Merge(src proto.Message) {
	xxx_messageInfo_State.Merge(m, src)
}
func (m *State) XXX_Size() int {
	return xxx_messageInfo_State.Size(m)
}
func (m *State) XXX_DiscardUnknown() {
	xxx_messageInfo_State.DiscardUnknown(m)
}

var xxx_messageInfo_State proto.InternalMessageInfo

func (m *State) GetCollectionTime() *timestamp.Timestamp {
	if m != nil {
		return m.CollectionTime
	}
	return nil
}

func (m *State) GetRegisterValues() *RegisterSnapshot {
	if m != nil {
		return m.RegisterValues
	}
	return nil
}

// Snapshot holds the values of all of the heat pump modbus registers for
// archival purposes.
type RegisterSnapshot struct {
	// The CX34 only supports holding registers, which are 16 bit values.
	// Protobuf only supports 32-bit values, otherwise we would use uint16.
	HoldingRegisterValues map[uint32]uint32 `protobuf:"bytes,1,rep,name=holding_register_values,json=holdingRegisterValues,proto3" json:"holding_register_values,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral  struct{}          `json:"-"`
	XXX_unrecognized      []byte            `json:"-"`
	XXX_sizecache         int32             `json:"-"`
}

func (m *RegisterSnapshot) Reset()         { *m = RegisterSnapshot{} }
func (m *RegisterSnapshot) String() string { return proto.CompactTextString(m) }
func (*RegisterSnapshot) ProtoMessage()    {}
func (*RegisterSnapshot) Descriptor() ([]byte, []int) {
	return fileDescriptor_13e145c77d2d01e5, []int{1}
}

func (m *RegisterSnapshot) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterSnapshot.Unmarshal(m, b)
}
func (m *RegisterSnapshot) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterSnapshot.Marshal(b, m, deterministic)
}
func (m *RegisterSnapshot) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterSnapshot.Merge(m, src)
}
func (m *RegisterSnapshot) XXX_Size() int {
	return xxx_messageInfo_RegisterSnapshot.Size(m)
}
func (m *RegisterSnapshot) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterSnapshot.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterSnapshot proto.InternalMessageInfo

func (m *RegisterSnapshot) GetHoldingRegisterValues() map[uint32]uint32 {
	if m != nil {
		return m.HoldingRegisterValues
	}
	return nil
}

// QueryStreamRequest specifies a request for heatpump states.
type QueryStreamRequest struct {
	// start_time and end_time specify a time range to be queried. Either or both values
	// may be omitted.
	StartTime            *timestamp.Timestamp `protobuf:"bytes,1,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime              *timestamp.Timestamp `protobuf:"bytes,2,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *QueryStreamRequest) Reset()         { *m = QueryStreamRequest{} }
func (m *QueryStreamRequest) String() string { return proto.CompactTextString(m) }
func (*QueryStreamRequest) ProtoMessage()    {}
func (*QueryStreamRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_13e145c77d2d01e5, []int{2}
}

func (m *QueryStreamRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryStreamRequest.Unmarshal(m, b)
}
func (m *QueryStreamRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryStreamRequest.Marshal(b, m, deterministic)
}
func (m *QueryStreamRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryStreamRequest.Merge(m, src)
}
func (m *QueryStreamRequest) XXX_Size() int {
	return xxx_messageInfo_QueryStreamRequest.Size(m)
}
func (m *QueryStreamRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryStreamRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryStreamRequest proto.InternalMessageInfo

func (m *QueryStreamRequest) GetStartTime() *timestamp.Timestamp {
	if m != nil {
		return m.StartTime
	}
	return nil
}

func (m *QueryStreamRequest) GetEndTime() *timestamp.Timestamp {
	if m != nil {
		return m.EndTime
	}
	return nil
}

// QueryStreamResponse is an element in the returned stream for the QueryStream RPC.
type QueryStreamResponse struct {
	State                *State   `protobuf:"bytes,1,opt,name=state,proto3" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QueryStreamResponse) Reset()         { *m = QueryStreamResponse{} }
func (m *QueryStreamResponse) String() string { return proto.CompactTextString(m) }
func (*QueryStreamResponse) ProtoMessage()    {}
func (*QueryStreamResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_13e145c77d2d01e5, []int{3}
}

func (m *QueryStreamResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryStreamResponse.Unmarshal(m, b)
}
func (m *QueryStreamResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryStreamResponse.Marshal(b, m, deterministic)
}
func (m *QueryStreamResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryStreamResponse.Merge(m, src)
}
func (m *QueryStreamResponse) XXX_Size() int {
	return xxx_messageInfo_QueryStreamResponse.Size(m)
}
func (m *QueryStreamResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryStreamResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryStreamResponse proto.InternalMessageInfo

func (m *QueryStreamResponse) GetState() *State {
	if m != nil {
		return m.State
	}
	return nil
}

// StateSequence captures a series of state values. They are encoded
// differentially.
type StateSequence struct {
	// A series of StateDiff objects. The first object
	Diffs                []*StateDiff `protobuf:"bytes,1,rep,name=diffs,proto3" json:"diffs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *StateSequence) Reset()         { *m = StateSequence{} }
func (m *StateSequence) String() string { return proto.CompactTextString(m) }
func (*StateSequence) ProtoMessage()    {}
func (*StateSequence) Descriptor() ([]byte, []int) {
	return fileDescriptor_13e145c77d2d01e5, []int{4}
}

func (m *StateSequence) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StateSequence.Unmarshal(m, b)
}
func (m *StateSequence) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StateSequence.Marshal(b, m, deterministic)
}
func (m *StateSequence) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StateSequence.Merge(m, src)
}
func (m *StateSequence) XXX_Size() int {
	return xxx_messageInfo_StateSequence.Size(m)
}
func (m *StateSequence) XXX_DiscardUnknown() {
	xxx_messageInfo_StateSequence.DiscardUnknown(m)
}

var xxx_messageInfo_StateSequence proto.InternalMessageInfo

func (m *StateSequence) GetDiffs() []*StateDiff {
	if m != nil {
		return m.Diffs
	}
	return nil
}

// StateDiff is a difference between two states.
type StateDiff struct {
	// Collection time, always specified.
	CollectionTime *timestamp.Timestamp `protobuf:"bytes,1,opt,name=collection_time,json=collectionTime,proto3" json:"collection_time,omitempty"`
	// Modbus register values.
	UpdatedValues *RegisterSnapshot `protobuf:"bytes,2,opt,name=updated_values,json=updatedValues,proto3" json:"updated_values,omitempty"`
	// Registers that are not present in the new map.
	DeletedRegisters     []uint32 `protobuf:"varint,3,rep,packed,name=deleted_registers,json=deletedRegisters,proto3" json:"deleted_registers,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StateDiff) Reset()         { *m = StateDiff{} }
func (m *StateDiff) String() string { return proto.CompactTextString(m) }
func (*StateDiff) ProtoMessage()    {}
func (*StateDiff) Descriptor() ([]byte, []int) {
	return fileDescriptor_13e145c77d2d01e5, []int{5}
}

func (m *StateDiff) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StateDiff.Unmarshal(m, b)
}
func (m *StateDiff) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StateDiff.Marshal(b, m, deterministic)
}
func (m *StateDiff) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StateDiff.Merge(m, src)
}
func (m *StateDiff) XXX_Size() int {
	return xxx_messageInfo_StateDiff.Size(m)
}
func (m *StateDiff) XXX_DiscardUnknown() {
	xxx_messageInfo_StateDiff.DiscardUnknown(m)
}

var xxx_messageInfo_StateDiff proto.InternalMessageInfo

func (m *StateDiff) GetCollectionTime() *timestamp.Timestamp {
	if m != nil {
		return m.CollectionTime
	}
	return nil
}

func (m *StateDiff) GetUpdatedValues() *RegisterSnapshot {
	if m != nil {
		return m.UpdatedValues
	}
	return nil
}

func (m *StateDiff) GetDeletedRegisters() []uint32 {
	if m != nil {
		return m.DeletedRegisters
	}
	return nil
}

type SetParameterRequest struct {
	// If specifies, updates the target heating mode temperature.
	TargetHeatingModeTemperature *Temperature `protobuf:"bytes,1,opt,name=target_heating_mode_temperature,json=targetHeatingModeTemperature,proto3" json:"target_heating_mode_temperature,omitempty"`
	XXX_NoUnkeyedLiteral         struct{}     `json:"-"`
	XXX_unrecognized             []byte       `json:"-"`
	XXX_sizecache                int32        `json:"-"`
}

func (m *SetParameterRequest) Reset()         { *m = SetParameterRequest{} }
func (m *SetParameterRequest) String() string { return proto.CompactTextString(m) }
func (*SetParameterRequest) ProtoMessage()    {}
func (*SetParameterRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_13e145c77d2d01e5, []int{6}
}

func (m *SetParameterRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetParameterRequest.Unmarshal(m, b)
}
func (m *SetParameterRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetParameterRequest.Marshal(b, m, deterministic)
}
func (m *SetParameterRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetParameterRequest.Merge(m, src)
}
func (m *SetParameterRequest) XXX_Size() int {
	return xxx_messageInfo_SetParameterRequest.Size(m)
}
func (m *SetParameterRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetParameterRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetParameterRequest proto.InternalMessageInfo

func (m *SetParameterRequest) GetTargetHeatingModeTemperature() *Temperature {
	if m != nil {
		return m.TargetHeatingModeTemperature
	}
	return nil
}

type SetParameterResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetParameterResponse) Reset()         { *m = SetParameterResponse{} }
func (m *SetParameterResponse) String() string { return proto.CompactTextString(m) }
func (*SetParameterResponse) ProtoMessage()    {}
func (*SetParameterResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_13e145c77d2d01e5, []int{7}
}

func (m *SetParameterResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetParameterResponse.Unmarshal(m, b)
}
func (m *SetParameterResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetParameterResponse.Marshal(b, m, deterministic)
}
func (m *SetParameterResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetParameterResponse.Merge(m, src)
}
func (m *SetParameterResponse) XXX_Size() int {
	return xxx_messageInfo_SetParameterResponse.Size(m)
}
func (m *SetParameterResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SetParameterResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SetParameterResponse proto.InternalMessageInfo

type Temperature struct {
	DegreesCelcius       float64  `protobuf:"fixed64,1,opt,name=degrees_celcius,json=degreesCelcius,proto3" json:"degrees_celcius,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Temperature) Reset()         { *m = Temperature{} }
func (m *Temperature) String() string { return proto.CompactTextString(m) }
func (*Temperature) ProtoMessage()    {}
func (*Temperature) Descriptor() ([]byte, []int) {
	return fileDescriptor_13e145c77d2d01e5, []int{8}
}

func (m *Temperature) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Temperature.Unmarshal(m, b)
}
func (m *Temperature) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Temperature.Marshal(b, m, deterministic)
}
func (m *Temperature) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Temperature.Merge(m, src)
}
func (m *Temperature) XXX_Size() int {
	return xxx_messageInfo_Temperature.Size(m)
}
func (m *Temperature) XXX_DiscardUnknown() {
	xxx_messageInfo_Temperature.DiscardUnknown(m)
}

var xxx_messageInfo_Temperature proto.InternalMessageInfo

func (m *Temperature) GetDegreesCelcius() float64 {
	if m != nil {
		return m.DegreesCelcius
	}
	return 0
}

func init() {
	proto.RegisterType((*State)(nil), "chiltrix.State")
	proto.RegisterType((*RegisterSnapshot)(nil), "chiltrix.RegisterSnapshot")
	proto.RegisterMapType((map[uint32]uint32)(nil), "chiltrix.RegisterSnapshot.HoldingRegisterValuesEntry")
	proto.RegisterType((*QueryStreamRequest)(nil), "chiltrix.QueryStreamRequest")
	proto.RegisterType((*QueryStreamResponse)(nil), "chiltrix.QueryStreamResponse")
	proto.RegisterType((*StateSequence)(nil), "chiltrix.StateSequence")
	proto.RegisterType((*StateDiff)(nil), "chiltrix.StateDiff")
	proto.RegisterType((*SetParameterRequest)(nil), "chiltrix.SetParameterRequest")
	proto.RegisterType((*SetParameterResponse)(nil), "chiltrix.SetParameterResponse")
	proto.RegisterType((*Temperature)(nil), "chiltrix.Temperature")
}

func init() {
	proto.RegisterFile("chiltrix.proto", fileDescriptor_13e145c77d2d01e5)
}

var fileDescriptor_13e145c77d2d01e5 = []byte{
	// 590 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xac, 0x54, 0x5d, 0x4f, 0xd4, 0x40,
	0x14, 0xb5, 0x90, 0x55, 0xb8, 0xb8, 0x0b, 0x0e, 0xa0, 0xa4, 0x41, 0x21, 0x4d, 0x8c, 0x1a, 0x4d,
	0xd7, 0x60, 0x30, 0x4a, 0x7c, 0x51, 0x34, 0xd9, 0x17, 0xbf, 0x66, 0x89, 0x26, 0x6a, 0xd2, 0x94,
	0xf6, 0xd2, 0x8e, 0xb6, 0x9d, 0x3a, 0x33, 0x25, 0xe2, 0x0f, 0xf0, 0xdd, 0x7f, 0xe4, 0xbb, 0x7f,
	0xca, 0x99, 0x4e, 0xcb, 0x7e, 0xc8, 0x46, 0x1e, 0x7c, 0xdb, 0x7b, 0xcf, 0x3d, 0xe7, 0x7e, 0xcc,
	0xd9, 0x42, 0x2f, 0x4a, 0x59, 0xa6, 0x04, 0xfb, 0xe6, 0x97, 0x82, 0x2b, 0x4e, 0x16, 0xda, 0xd8,
	0xdd, 0x4a, 0x38, 0x4f, 0x32, 0xec, 0xd7, 0xf9, 0xc3, 0xea, 0xa8, 0xaf, 0x58, 0x8e, 0x52, 0x85,
	0x79, 0x69, 0x4b, 0xbd, 0x9f, 0x0e, 0x74, 0x86, 0x2a, 0x54, 0x48, 0xf6, 0x61, 0x39, 0xe2, 0x59,
	0x86, 0x91, 0x62, 0xbc, 0x08, 0x4c, 0xdd, 0x86, 0xb3, 0xed, 0xdc, 0x5e, 0xda, 0x71, 0x7d, 0x2b,
	0xe2, 0xb7, 0x22, 0xfe, 0x41, 0x2b, 0x42, 0x7b, 0x23, 0x8a, 0x49, 0x1a, 0x11, 0x81, 0x09, 0x93,
	0x0a, 0x45, 0x70, 0x1c, 0x66, 0x15, 0xca, 0x8d, 0xb9, 0x46, 0xe4, 0x74, 0x46, 0xda, 0x14, 0x0c,
	0x8b, 0xb0, 0x94, 0x29, 0x57, 0xb4, 0xd7, 0x52, 0xde, 0xd5, 0x0c, 0xef, 0xb7, 0x03, 0x2b, 0xd3,
	0x45, 0x24, 0x87, 0x6b, 0x29, 0xcf, 0x62, 0x56, 0x24, 0xc1, 0x74, 0x07, 0x67, 0x7b, 0x5e, 0x77,
	0xd8, 0x9d, 0xdd, 0xc1, 0x1f, 0x58, 0x26, 0x9d, 0xe8, 0xf3, 0xa2, 0x50, 0xe2, 0x84, 0xae, 0xa7,
	0x67, 0x61, 0xee, 0x00, 0xdc, 0xd9, 0x24, 0xb2, 0x02, 0xf3, 0x5f, 0xf0, 0xa4, 0xbe, 0x4f, 0x97,
	0x9a, 0x9f, 0x64, 0x0d, 0x3a, 0xf5, 0x34, 0xf5, 0xba, 0x5d, 0x6a, 0x83, 0xbd, 0xb9, 0x47, 0x8e,
	0xf7, 0xc3, 0x01, 0xf2, 0xb6, 0x42, 0x71, 0x32, 0x54, 0x02, 0xc3, 0x9c, 0xe2, 0x57, 0x2d, 0xa3,
	0xc8, 0x63, 0x00, 0x7d, 0x42, 0xa1, 0xce, 0x7b, 0xe9, 0xc5, 0xba, 0xba, 0x3e, 0xf2, 0x2e, 0x2c,
	0x60, 0x11, 0x5b, 0xe2, 0xdc, 0x3f, 0x89, 0x97, 0x74, 0xad, 0x89, 0xbc, 0x27, 0xb0, 0x3a, 0x31,
	0x87, 0x2c, 0x79, 0x21, 0x91, 0xdc, 0x84, 0x8e, 0x34, 0x06, 0x68, 0x66, 0x58, 0x1e, 0x9d, 0xb1,
	0xf6, 0x05, 0xb5, 0xa8, 0xb7, 0x07, 0xdd, 0x3a, 0x1e, 0x9a, 0xf9, 0x8b, 0x08, 0xc9, 0x1d, 0xe8,
	0xc4, 0xec, 0xe8, 0xa8, 0x3d, 0xff, 0xea, 0x14, 0xef, 0xb9, 0xc6, 0xa8, 0xad, 0xf0, 0x7e, 0x39,
	0xb0, 0x78, 0x9a, 0xfc, 0x3f, 0x46, 0x7b, 0x0a, 0xbd, 0xaa, 0x8c, 0xb5, 0x64, 0x7c, 0x7e, 0x9f,
	0x75, 0x1b, 0x86, 0x7d, 0x49, 0x72, 0x17, 0xae, 0xc4, 0x98, 0xa1, 0x91, 0x68, 0x1d, 0x25, 0x37,
	0xe6, 0xf5, 0x32, 0x5d, 0xba, 0xd2, 0x00, 0xad, 0x84, 0xf4, 0x24, 0xac, 0x0e, 0x51, 0xbd, 0x09,
	0x45, 0x98, 0x6b, 0x40, 0xb4, 0xaf, 0xf8, 0x09, 0xb6, 0xf4, 0xb3, 0x24, 0xa8, 0x82, 0x14, 0x43,
	0x65, 0xcc, 0x99, 0xf3, 0x18, 0x03, 0x85, 0x79, 0x89, 0x22, 0x54, 0x95, 0x68, 0x77, 0x5b, 0x1f,
	0xcd, 0x75, 0x30, 0x02, 0xe9, 0xa6, 0x65, 0x0f, 0x2c, 0xf9, 0xa5, 0xe6, 0x8e, 0xa1, 0xde, 0x55,
	0x58, 0x9b, 0x6c, 0x6a, 0x9f, 0xcc, 0x7b, 0x08, 0x4b, 0x63, 0x65, 0xe4, 0x16, 0x2c, 0xc7, 0x98,
	0x08, 0x44, 0x19, 0x44, 0x98, 0x45, 0xac, 0x92, 0x75, 0x53, 0x87, 0xf6, 0x9a, 0xf4, 0xbe, 0xcd,
	0xee, 0x7c, 0x84, 0xc5, 0x81, 0xde, 0x87, 0x0b, 0x16, 0x16, 0xe4, 0x15, 0x2c, 0x8d, 0xd9, 0x81,
	0x6c, 0x8e, 0x06, 0xfc, 0xdb, 0xad, 0xee, 0xf5, 0x19, 0x68, 0x33, 0xd0, 0x85, 0xfb, 0xce, 0x4e,
	0x64, 0xfe, 0xb4, 0x61, 0xfc, 0x5e, 0x30, 0x63, 0x12, 0x71, 0xcc, 0xb4, 0x47, 0x5e, 0xc3, 0xe5,
	0xf1, 0x05, 0xc8, 0x98, 0xcc, 0x19, 0xd7, 0x74, 0x6f, 0xcc, 0x82, 0xdb, 0x36, 0xcf, 0xfc, 0x0f,
	0xf7, 0x12, 0xa6, 0xd2, 0xea, 0xd0, 0x8f, 0x78, 0xde, 0x4f, 0x78, 0xf1, 0x9d, 0x7f, 0x66, 0xc7,
	0xd8, 0x37, 0xd7, 0x2f, 0xab, 0xbc, 0xb4, 0x1f, 0xba, 0x7e, 0x2b, 0x73, 0x78, 0xb1, 0x8e, 0x1f,
	0xfc, 0x09, 0x00, 0x00, 0xff, 0xff, 0xfa, 0xc8, 0xa4, 0x95, 0x22, 0x05, 0x00, 0x00,
}
